Python AST (depth 2)
FunctionDef(
    lineno=1,
    col_offset=0,
    end_lineno=4,
    end_col_offset=36,
    name='recursive_fact',
    args=arguments(
        posonlyargs=[],
        args=[...],
        vararg=None,
        kwonlyargs=[],
        kw_defaults=[],
        kwarg=None,
        defaults=[],
    ),
    body=[
        If(
            lineno=2,
            col_offset=4,
            end_lineno=3,
            end_col_offset=16,
            test=...,
            body=[
                ...,
            ],
            orelse=[],
        ),
        Return(
            lineno=4,
            col_offset=4,
            end_lineno=4,
            end_col_offset=36,
            value=...,
        ),
    ],
    decorator_list=[],
    returns=None,
    type_comment=None,
)
--------------------------------------------------
Python Source
Line numbers 1 to 4
def recursive_fact(x):
    if x <= 1:
        return 1
    return x * recursive_fact(x - 1)
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Name(lineno=6, col_offset=0, end_lineno=6, end_col_offset=5, id='print', ctx=Load())
--------------------------------------------------
Python Source
Line number 6, columns 0 to 5
print(recursive_fact(5))
˜˜˜˜˜
--------------------------------------------------
Result
<built-in function print>
--------------------------------------------------
Python AST (depth 2)
Name(lineno=6, col_offset=6, end_lineno=6, end_col_offset=20, id='recursive_fact', ctx=Load())
--------------------------------------------------
Python Source
Line number 6, columns 6 to 20
print(recursive_fact(5))
      ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
<recursive_fact function, line 1>
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=6, col_offset=21, end_lineno=6, end_col_offset=22, value=5, kind=None)
--------------------------------------------------
Python Source
Line number 6, columns 21 to 22
print(recursive_fact(5))
                     ˜
--------------------------------------------------
Result
5
--------------------------------------------------
Python AST (depth 2)
Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 2, columns 7 to 8
    if x <= 1:
       ˜
--------------------------------------------------
Result
5
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 2, columns 12 to 13
    if x <= 1:
            ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Compare(
    lineno=2,
    col_offset=7,
    end_lineno=2,
    end_col_offset=13,
    left=Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load()),
    ops=[LtE()],
    comparators=[Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)],
)
--------------------------------------------------
Python Source
Line number 2, columns 7 to 13
    if x <= 1:
       ˜˜˜˜˜˜
--------------------------------------------------
Result
False
--------------------------------------------------
Python AST (depth 2)
If(
    lineno=2,
    col_offset=4,
    end_lineno=3,
    end_col_offset=16,
    test=Compare(
        lineno=2,
        col_offset=7,
        end_lineno=2,
        end_col_offset=13,
        left=...,
        ops=[...],
        comparators=[...],
    ),
    body=[
        Return(
            lineno=3,
            col_offset=8,
            end_lineno=3,
            end_col_offset=16,
            value=...,
        ),
    ],
    orelse=[],
)
--------------------------------------------------
Python Source
Line numbers 2 to 3
    if x <= 1:
        return 1
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 11 to 12
    return x * recursive_fact(x - 1)
           ˜
--------------------------------------------------
Result
5
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 15 to 29
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
<recursive_fact function, line 1>
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 30 to 31
    return x * recursive_fact(x - 1)
                              ˜
--------------------------------------------------
Result
5
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 4, columns 34 to 35
    return x * recursive_fact(x - 1)
                                  ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=30,
    end_lineno=4,
    end_col_offset=35,
    left=Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load()),
    op=Sub(),
    right=Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None),
)
--------------------------------------------------
Python Source
Line number 4, columns 30 to 35
    return x * recursive_fact(x - 1)
                              ˜˜˜˜˜
--------------------------------------------------
Result
4
--------------------------------------------------
Python AST (depth 2)
Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 2, columns 7 to 8
    if x <= 1:
       ˜
--------------------------------------------------
Result
4
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 2, columns 12 to 13
    if x <= 1:
            ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Compare(
    lineno=2,
    col_offset=7,
    end_lineno=2,
    end_col_offset=13,
    left=Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load()),
    ops=[LtE()],
    comparators=[Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)],
)
--------------------------------------------------
Python Source
Line number 2, columns 7 to 13
    if x <= 1:
       ˜˜˜˜˜˜
--------------------------------------------------
Result
False
--------------------------------------------------
Python AST (depth 2)
If(
    lineno=2,
    col_offset=4,
    end_lineno=3,
    end_col_offset=16,
    test=Compare(
        lineno=2,
        col_offset=7,
        end_lineno=2,
        end_col_offset=13,
        left=...,
        ops=[...],
        comparators=[...],
    ),
    body=[
        Return(
            lineno=3,
            col_offset=8,
            end_lineno=3,
            end_col_offset=16,
            value=...,
        ),
    ],
    orelse=[],
)
--------------------------------------------------
Python Source
Line numbers 2 to 3
    if x <= 1:
        return 1
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 11 to 12
    return x * recursive_fact(x - 1)
           ˜
--------------------------------------------------
Result
4
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 15 to 29
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
<recursive_fact function, line 1>
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 30 to 31
    return x * recursive_fact(x - 1)
                              ˜
--------------------------------------------------
Result
4
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 4, columns 34 to 35
    return x * recursive_fact(x - 1)
                                  ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=30,
    end_lineno=4,
    end_col_offset=35,
    left=Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load()),
    op=Sub(),
    right=Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None),
)
--------------------------------------------------
Python Source
Line number 4, columns 30 to 35
    return x * recursive_fact(x - 1)
                              ˜˜˜˜˜
--------------------------------------------------
Result
3
--------------------------------------------------
Python AST (depth 2)
Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 2, columns 7 to 8
    if x <= 1:
       ˜
--------------------------------------------------
Result
3
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 2, columns 12 to 13
    if x <= 1:
            ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Compare(
    lineno=2,
    col_offset=7,
    end_lineno=2,
    end_col_offset=13,
    left=Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load()),
    ops=[LtE()],
    comparators=[Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)],
)
--------------------------------------------------
Python Source
Line number 2, columns 7 to 13
    if x <= 1:
       ˜˜˜˜˜˜
--------------------------------------------------
Result
False
--------------------------------------------------
Python AST (depth 2)
If(
    lineno=2,
    col_offset=4,
    end_lineno=3,
    end_col_offset=16,
    test=Compare(
        lineno=2,
        col_offset=7,
        end_lineno=2,
        end_col_offset=13,
        left=...,
        ops=[...],
        comparators=[...],
    ),
    body=[
        Return(
            lineno=3,
            col_offset=8,
            end_lineno=3,
            end_col_offset=16,
            value=...,
        ),
    ],
    orelse=[],
)
--------------------------------------------------
Python Source
Line numbers 2 to 3
    if x <= 1:
        return 1
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 11 to 12
    return x * recursive_fact(x - 1)
           ˜
--------------------------------------------------
Result
3
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 15 to 29
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
<recursive_fact function, line 1>
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 30 to 31
    return x * recursive_fact(x - 1)
                              ˜
--------------------------------------------------
Result
3
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 4, columns 34 to 35
    return x * recursive_fact(x - 1)
                                  ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=30,
    end_lineno=4,
    end_col_offset=35,
    left=Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load()),
    op=Sub(),
    right=Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None),
)
--------------------------------------------------
Python Source
Line number 4, columns 30 to 35
    return x * recursive_fact(x - 1)
                              ˜˜˜˜˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 2, columns 7 to 8
    if x <= 1:
       ˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 2, columns 12 to 13
    if x <= 1:
            ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Compare(
    lineno=2,
    col_offset=7,
    end_lineno=2,
    end_col_offset=13,
    left=Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load()),
    ops=[LtE()],
    comparators=[Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)],
)
--------------------------------------------------
Python Source
Line number 2, columns 7 to 13
    if x <= 1:
       ˜˜˜˜˜˜
--------------------------------------------------
Result
False
--------------------------------------------------
Python AST (depth 2)
If(
    lineno=2,
    col_offset=4,
    end_lineno=3,
    end_col_offset=16,
    test=Compare(
        lineno=2,
        col_offset=7,
        end_lineno=2,
        end_col_offset=13,
        left=...,
        ops=[...],
        comparators=[...],
    ),
    body=[
        Return(
            lineno=3,
            col_offset=8,
            end_lineno=3,
            end_col_offset=16,
            value=...,
        ),
    ],
    orelse=[],
)
--------------------------------------------------
Python Source
Line numbers 2 to 3
    if x <= 1:
        return 1
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 11 to 12
    return x * recursive_fact(x - 1)
           ˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 15 to 29
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
<recursive_fact function, line 1>
--------------------------------------------------
Python AST (depth 2)
Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 4, columns 30 to 31
    return x * recursive_fact(x - 1)
                              ˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 4, columns 34 to 35
    return x * recursive_fact(x - 1)
                                  ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=30,
    end_lineno=4,
    end_col_offset=35,
    left=Name(lineno=4, col_offset=30, end_lineno=4, end_col_offset=31, id='x', ctx=Load()),
    op=Sub(),
    right=Constant(lineno=4, col_offset=34, end_lineno=4, end_col_offset=35, value=1, kind=None),
)
--------------------------------------------------
Python Source
Line number 4, columns 30 to 35
    return x * recursive_fact(x - 1)
                              ˜˜˜˜˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load())
--------------------------------------------------
Python Source
Line number 2, columns 7 to 8
    if x <= 1:
       ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 2, columns 12 to 13
    if x <= 1:
            ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Compare(
    lineno=2,
    col_offset=7,
    end_lineno=2,
    end_col_offset=13,
    left=Name(lineno=2, col_offset=7, end_lineno=2, end_col_offset=8, id='x', ctx=Load()),
    ops=[LtE()],
    comparators=[Constant(lineno=2, col_offset=12, end_lineno=2, end_col_offset=13, value=1, kind=None)],
)
--------------------------------------------------
Python Source
Line number 2, columns 7 to 13
    if x <= 1:
       ˜˜˜˜˜˜
--------------------------------------------------
Result
True
--------------------------------------------------
Python AST (depth 2)
Constant(lineno=3, col_offset=15, end_lineno=3, end_col_offset=16, value=1, kind=None)
--------------------------------------------------
Python Source
Line number 3, columns 15 to 16
        return 1
               ˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
Call(
    lineno=4,
    col_offset=15,
    end_lineno=4,
    end_col_offset=36,
    func=Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load()),
    args=[
        BinOp(
            lineno=4,
            col_offset=30,
            end_lineno=4,
            end_col_offset=35,
            left=...,
            op=...,
            right=...,
        ),
    ],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 4, columns 15 to 36
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
1
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=11,
    end_lineno=4,
    end_col_offset=36,
    left=Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load()),
    op=Mult(),
    right=Call(
        lineno=4,
        col_offset=15,
        end_lineno=4,
        end_col_offset=36,
        func=...,
        args=[
            ...,
        ],
        keywords=[],
    ),
)
--------------------------------------------------
Python Source
Line number 4, columns 11 to 36
    return x * recursive_fact(x - 1)
           ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
Call(
    lineno=4,
    col_offset=15,
    end_lineno=4,
    end_col_offset=36,
    func=Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load()),
    args=[
        BinOp(
            lineno=4,
            col_offset=30,
            end_lineno=4,
            end_col_offset=35,
            left=...,
            op=...,
            right=...,
        ),
    ],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 4, columns 15 to 36
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
2
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=11,
    end_lineno=4,
    end_col_offset=36,
    left=Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load()),
    op=Mult(),
    right=Call(
        lineno=4,
        col_offset=15,
        end_lineno=4,
        end_col_offset=36,
        func=...,
        args=[
            ...,
        ],
        keywords=[],
    ),
)
--------------------------------------------------
Python Source
Line number 4, columns 11 to 36
    return x * recursive_fact(x - 1)
           ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
6
--------------------------------------------------
Python AST (depth 2)
Call(
    lineno=4,
    col_offset=15,
    end_lineno=4,
    end_col_offset=36,
    func=Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load()),
    args=[
        BinOp(
            lineno=4,
            col_offset=30,
            end_lineno=4,
            end_col_offset=35,
            left=...,
            op=...,
            right=...,
        ),
    ],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 4, columns 15 to 36
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
6
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=11,
    end_lineno=4,
    end_col_offset=36,
    left=Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load()),
    op=Mult(),
    right=Call(
        lineno=4,
        col_offset=15,
        end_lineno=4,
        end_col_offset=36,
        func=...,
        args=[
            ...,
        ],
        keywords=[],
    ),
)
--------------------------------------------------
Python Source
Line number 4, columns 11 to 36
    return x * recursive_fact(x - 1)
           ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
24
--------------------------------------------------
Python AST (depth 2)
Call(
    lineno=4,
    col_offset=15,
    end_lineno=4,
    end_col_offset=36,
    func=Name(lineno=4, col_offset=15, end_lineno=4, end_col_offset=29, id='recursive_fact', ctx=Load()),
    args=[
        BinOp(
            lineno=4,
            col_offset=30,
            end_lineno=4,
            end_col_offset=35,
            left=...,
            op=...,
            right=...,
        ),
    ],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 4, columns 15 to 36
    return x * recursive_fact(x - 1)
               ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
24
--------------------------------------------------
Python AST (depth 2)
BinOp(
    lineno=4,
    col_offset=11,
    end_lineno=4,
    end_col_offset=36,
    left=Name(lineno=4, col_offset=11, end_lineno=4, end_col_offset=12, id='x', ctx=Load()),
    op=Mult(),
    right=Call(
        lineno=4,
        col_offset=15,
        end_lineno=4,
        end_col_offset=36,
        func=...,
        args=[
            ...,
        ],
        keywords=[],
    ),
)
--------------------------------------------------
Python Source
Line number 4, columns 11 to 36
    return x * recursive_fact(x - 1)
           ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
120
--------------------------------------------------
Python AST (depth 2)
Call(
    lineno=6,
    col_offset=6,
    end_lineno=6,
    end_col_offset=23,
    func=Name(lineno=6, col_offset=6, end_lineno=6, end_col_offset=20, id='recursive_fact', ctx=Load()),
    args=[Constant(lineno=6, col_offset=21, end_lineno=6, end_col_offset=22, value=5, kind=None)],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 6, columns 6 to 23
print(recursive_fact(5))
      ˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
120
--------------------------------------------------
120
Python AST (depth 2)
Call(
    lineno=6,
    col_offset=0,
    end_lineno=6,
    end_col_offset=24,
    func=Name(lineno=6, col_offset=0, end_lineno=6, end_col_offset=5, id='print', ctx=Load()),
    args=[
        Call(
            lineno=6,
            col_offset=6,
            end_lineno=6,
            end_col_offset=23,
            func=...,
            args=[...],
            keywords=[],
        ),
    ],
    keywords=[],
)
--------------------------------------------------
Python Source
Line number 6, columns 0 to 24
print(recursive_fact(5))
˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Expr(
    lineno=6,
    col_offset=0,
    end_lineno=6,
    end_col_offset=24,
    value=Call(
        lineno=6,
        col_offset=0,
        end_lineno=6,
        end_col_offset=24,
        func=...,
        args=[
            ...,
        ],
        keywords=[],
    ),
)
--------------------------------------------------
Python Source
Line number 6, columns 0 to 24
print(recursive_fact(5))
˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜˜
--------------------------------------------------
Result
None
--------------------------------------------------
Python AST (depth 2)
Module(
    body=[
        FunctionDef(
            lineno=1,
            col_offset=0,
            end_lineno=4,
            end_col_offset=36,
            name='recursive_fact',
            args=...,
            body=[
                ...,
                ...,
            ],
            decorator_list=[],
            returns=None,
            type_comment=None,
        ),
        Expr(
            lineno=6,
            col_offset=0,
            end_lineno=6,
            end_col_offset=24,
            value=...,
        ),
    ],
    type_ignores=[],
)
--------------------------------------------------
Python Source
<source file>
--------------------------------------------------
Result
None
--------------------------------------------------
